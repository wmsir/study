mysql支持的索引类型
	1.B-tree索引
	2.Hash索引
	
B-tree索引的特点
	B-tree索引 B+树来存储数据
	B-tree索引 能够加快数据的查询速度
	B-tree索引 更适合进行范围查找
	
	
什么情况下用b树索引
	全职匹配的查询
		order_sn="1234567890"
	匹配最左前缀的查询
		
	匹配列前缀查询
		
	匹配范围值的查询
	
	精准匹配左前列并范围匹配另外一列
	
	
	只访问索引的查询
	
	
	
	
为什么要使用索引？
	1.索引可以大大的减少存储引擎需要扫描的数据量
	2.索引可以帮助我们进行排序以避免使用临时表
	3.索引可以把随即IO变为顺序IO。

索引带来的问题：
	索引会增加写操作的成本
	太多的索引会增加查询优化器的选择时间
	
	
	

索引的优化策略
	1.索引列不能使用表达式或者函数
		select * from product where to_days(out_date) - to_days(current_day) <= 30;
		这里的out_date是一个索引，to_days是一个函数。违背了索引策略。
		
		优化一下：
		select * from product where out_date <= date_add(current_day,interval 30 day) ;
	
	2.前缀索引和索引列的选择性
		create index index_name on table(col_name(n));
		索引的选择性是不重复的索引值和表的记录数的比值。
		
	3.联合索引
		如何选择索引列的顺序
			经常会被使用到的列优先
			选择性高的列优先
			宽带笑的列优先
			
			
			
			
			
			
			
			