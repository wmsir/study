范式化设计的优缺点

优点：
	可以进来的减少数据冗余，数据表更新快，体积小
	范式化的更新操作比反范式化更快
	范式化的表通茶小

缺点：
	对于查询需要对多个表进行关联
	更难进行索引优化
	
	
	
反范式化的优缺点

优点：
	减少表的关联
	可以更好的进行索引优化
缺点：
	反范式化的增加数据冗余及其数据维护异常
	对数据的修改要更多的成本
	
	
	物理设计
	
	物理设计涉及的内容：
	1.定义数据库、表及其字段的命名规范
		需要遵守 可读性原则
		需要遵守 表意性原则
	    需要遵守 长名原则
	2.选择适合的存储引擎
	
	3.为表中的字段选择合适的数据类型
		当一个字段可以选择多个数据类型时，优先考虑数字类型，其实是日期或者二进制类型，最后是字符串类型。
		相同级别的数据类型，应该优先选择占用空间小的数据类型。
		varchar类型的存储特点：
			varchar用于存储变长字符串，只占用必要的存储空间。
			字段的长度小于255个字节，则占用一个额外字节用于记录字符串长度。
			字段的长度大于255个字节，则占用2个额外字节用于记录字符串长度。
		varchar长度选择问题：
			使用最小长度
			
		varchar适用场景：
			字符串列的最大长度比平均长度大很多
			字符串列很少被更新
			使用了多字节字符集存储字符串
			
		char类型的存储特点：
			char类型是定长的
			char类型的最大宽度为255
			char类型会删除末尾的空格，varchar不会。
		char类想的使用场景：
			char类型适合存储长度近似的值
			char类型适合存储短字符串
			char类型适合存储经常更新的字符串列（字段）。
		如何存储日期数据？
		
		datetime类型，特点：与失去无关，占用8个字节的存储空间
		YYYY-MM-DD HH:MM:SS  从1000年到9999年
		
		timestamp类型
		存储了格林尼治时间1970年1月1日到当前时间的秒数，占用4个字节。
		时间范围：  1970-01-01到2038-01-19
		timestamp依赖于指定的时区。在行的数据修改时，可以自动修改timestamp列的值
		date类型 （3个字节）
		date类型用于存储时间数据，格式为：YYYY-MM-DD
		1000-01-01到9999-12-31
		time类型
		time类型用于存储时间数据，格式为：HH:MM:SS
		
		
	4.建立数据库结构
	
	
	
	
	
	
	
	
	
	
	
	
	